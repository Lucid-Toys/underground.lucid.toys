{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/dte/Repos/underground.lucid.toys/components/Timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"@emotion/styled\";\nconst List = styled.ul`\n  list-style-type: none;\n  flex: 0 0 12rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: stretch;\n  flex-direction: column;\n  font-size: 0.75em;\n\n  li {\n    flex: 1;\n  }\n\n  li:nth-child(even) {\n    opacity: 0.5;\n  }\n`;\nconst ClockListItem = styled.li`\n  position: absolute;\n  top: ${props => props.progress}%;\n  display: flex;\n  padding: 0.5em;\n  margin: -0.5em;\n  background-image: linear-gradient(#fff, #fff 75%, rgba(255, 255, 255, 0)) p +\n    p {\n    margin-left: 0.75em;\n  }\n`;\n\nfunction Clock(props) {\n  const timer = useNewTimer(new Date());\n  const interval = 1000 * 60 * 60 * 24;\n  const startOfDay = Math.floor(_Date$now() / interval) * interval;\n  const elapsed = Math.abs(timer - startOfDay) / interval;\n  return __jsx(ClockListItem, {\n    progress: elapsed * 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, timer.toLocaleTimeString(undefined, {\n    timeStyle: \"short\"\n  })), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Usually very busy\"));\n}\n\nfunction useNewTimer(currentDate) {\n  const [date, setDate] = React.useState(currentDate);\n  React.useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return date;\n}\n\nexport default function Timeline() {\n  const timestamps = Array(24).fill(undefined).map((_, i) => `${i}`.padStart(2, \"0\"));\n  const currentTime = _Date$now;\n  return __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Clock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), timestamps.map(timestamp => __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, timestamp, \":00\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, timestamp, \":30\"))));\n}","map":{"version":3,"sources":["/Users/dte/Repos/underground.lucid.toys/components/Timeline.js"],"names":["styled","List","ul","ClockListItem","li","props","progress","Clock","timer","useNewTimer","Date","interval","startOfDay","Math","floor","elapsed","abs","toLocaleTimeString","undefined","timeStyle","currentDate","date","setDate","React","useState","useEffect","timerID","setInterval","tick","cleanup","clearInterval","Timeline","timestamps","Array","fill","map","_","i","padStart","currentTime","timestamp"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,EAAG;;;;;;;;;;;;;;;;CAAvB;AAkBA,MAAMC,aAAa,GAAGH,MAAM,CAACI,EAAG;;SAEvBC,KAAK,IAAIA,KAAK,CAACC,QAAS;;;;;;;;CAFjC;;AAYA,SAASC,KAAT,CAAeF,KAAf,EAAsB;AACpB,QAAMG,KAAK,GAAGC,WAAW,CAAC,IAAIC,IAAJ,EAAD,CAAzB;AACA,QAAMC,QAAQ,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAlC;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,cAAaH,QAAxB,IAAoCA,QAAvD;AACA,QAAMI,OAAO,GAAGF,IAAI,CAACG,GAAL,CAASR,KAAK,GAAGI,UAAjB,IAA+BD,QAA/C;AAEA,SACE,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAEI,OAAO,GAAG,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,KAAK,CAACS,kBAAN,CAAyBC,SAAzB,EAAoC;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAApC,CAAJ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF;AAMD;;AAED,SAASV,WAAT,CAAqBW,WAArB,EAAkC;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,KAAK,CAACC,QAAN,CAAeJ,WAAf,CAAxB;AAEAG,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAIC,OAAO,GAAGC,WAAW,CAAC,MAAMC,IAAI,EAAX,EAAe,IAAf,CAAzB;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACJ,OAAD,CAAb;AACD,KAFD;AAGD,GALD;;AAOA,WAASE,IAAT,GAAgB;AACdN,IAAAA,OAAO,CAAC,IAAIZ,IAAJ,EAAD,CAAP;AACD;;AAED,SAAOW,IAAP;AACD;;AAED,eAAe,SAASU,QAAT,GAAoB;AACjC,QAAMC,UAAU,GAAGC,KAAK,CAAC,EAAD,CAAL,CAChBC,IADgB,CACXhB,SADW,EAEhBiB,GAFgB,CAEZ,CAACC,CAAD,EAAIC,CAAJ,KAAW,GAAEA,CAAE,EAAL,CAAOC,QAAP,CAAgB,CAAhB,EAAmB,GAAnB,CAFE,CAAnB;AAIA,QAAMC,WAAW,YAAjB;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGP,UAAU,CAACG,GAAX,CAAeK,SAAS,IACvB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAL,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAL,QAFF,CADD,CAFH,CADF;AAWD","sourcesContent":["import styled from \"@emotion/styled\"\n\nconst List = styled.ul`\n  list-style-type: none;\n  flex: 0 0 12rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: stretch;\n  flex-direction: column;\n  font-size: 0.75em;\n\n  li {\n    flex: 1;\n  }\n\n  li:nth-child(even) {\n    opacity: 0.5;\n  }\n`\n\nconst ClockListItem = styled.li`\n  position: absolute;\n  top: ${props => props.progress}%;\n  display: flex;\n  padding: 0.5em;\n  margin: -0.5em;\n  background-image: linear-gradient(#fff, #fff 75%, rgba(255, 255, 255, 0)) p +\n    p {\n    margin-left: 0.75em;\n  }\n`\n\nfunction Clock(props) {\n  const timer = useNewTimer(new Date())\n  const interval = 1000 * 60 * 60 * 24\n  const startOfDay = Math.floor(Date.now() / interval) * interval\n  const elapsed = Math.abs(timer - startOfDay) / interval\n\n  return (\n    <ClockListItem progress={elapsed * 100}>\n      <p>{timer.toLocaleTimeString(undefined, { timeStyle: \"short\" })}</p>\n      <p>Usually very busy</p>\n    </ClockListItem>\n  )\n}\n\nfunction useNewTimer(currentDate) {\n  const [date, setDate] = React.useState(currentDate)\n\n  React.useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000)\n    return function cleanup() {\n      clearInterval(timerID)\n    }\n  })\n\n  function tick() {\n    setDate(new Date())\n  }\n\n  return date\n}\n\nexport default function Timeline() {\n  const timestamps = Array(24)\n    .fill(undefined)\n    .map((_, i) => `${i}`.padStart(2, \"0\"))\n\n  const currentTime = Date.now\n\n  return (\n    <List>\n      <Clock />\n      {timestamps.map(timestamp => (\n        <React.Fragment>\n          <li>{timestamp}:00</li>\n          <li>{timestamp}:30</li>\n        </React.Fragment>\n      ))}\n    </List>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}