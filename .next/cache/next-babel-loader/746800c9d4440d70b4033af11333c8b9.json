{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dte/Repos/underground.lucid.toys/components/Timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  list-style-type: none;\\n  flex: 0 0 12rem;\\n  padding: 1rem;\\n  display: flex;\\n  justify-content: stretch;\\n  flex-direction: column;\\n  font-size: 0.75em;\\n\\n  li {\\n    flex: 1;\\n  }\\n\\n  li:nth-child(even) {\\n    opacity: 0.5;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"@emotion/styled\";\nvar List = styled.ul(_templateObject());\n\nfunction Clock(props) {\n  var timer = useNewTimer(new Date());\n  var interval = 1000 * 60 * 60 * 24;\n  var startOfDay = Math.floor(_Date$now() / interval) * interval;\n  var elapsed = Math.abs(timer - startOfDay) / interval;\n  return __jsx(\"li\", {\n    style: {\n      position: \"absolute\",\n      top: \"\".concat(elapsed * 100, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, timer.toLocaleTimeString(), \".\"));\n}\n\nfunction useNewTimer(currentDate) {\n  var _React$useState = React.useState(currentDate),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      date = _React$useState2[0],\n      setDate = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timerID = setInterval(function () {\n      return tick();\n    }, 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return date;\n}\n\nexport default function Timeline() {\n  var timestamps = Array(24).fill(undefined).map(function (_, i) {\n    return \"\".concat(i).padStart(2, \"0\");\n  });\n  var currentTime = _Date$now;\n  return __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Clock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), timestamps.map(function (timestamp) {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, timestamp, \":00\"), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, timestamp, \":30\"));\n  }));\n}","map":{"version":3,"sources":["/Users/dte/Repos/underground.lucid.toys/components/Timeline.js"],"names":["styled","List","ul","Clock","props","timer","useNewTimer","Date","interval","startOfDay","Math","floor","elapsed","abs","position","top","toLocaleTimeString","currentDate","React","useState","date","setDate","useEffect","timerID","setInterval","tick","cleanup","clearInterval","Timeline","timestamps","Array","fill","undefined","map","_","i","padStart","currentTime","timestamp"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,IAAI,GAAGD,MAAM,CAACE,EAAV,mBAAV;;AAkBA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAMC,KAAK,GAAGC,WAAW,CAAC,IAAIC,IAAJ,EAAD,CAAzB;AACA,MAAMC,QAAQ,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAlC;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,cAAaH,QAAxB,IAAoCA,QAAvD;AACA,MAAMI,OAAO,GAAGF,IAAI,CAACG,GAAL,CAASR,KAAK,GAAGI,UAAjB,IAA+BD,QAA/C;AAEA,SACE;AAAI,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,YAAKH,OAAO,GAAG,GAAf;AAA3B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,KAAK,CAACW,kBAAN,EAAJ,MADF,CADF;AAKD;;AAED,SAASV,WAAT,CAAqBW,WAArB,EAAkC;AAAA,wBACRC,KAAK,CAACC,QAAN,CAAeF,WAAf,CADQ;AAAA;AAAA,MACzBG,IADyB;AAAA,MACnBC,OADmB;;AAGhCH,EAAAA,KAAK,CAACI,SAAN,CAAgB,YAAM;AACpB,QAAIC,OAAO,GAAGC,WAAW,CAAC;AAAA,aAAMC,IAAI,EAAV;AAAA,KAAD,EAAe,IAAf,CAAzB;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACJ,OAAD,CAAb;AACD,KAFD;AAGD,GALD;;AAOA,WAASE,IAAT,GAAgB;AACdJ,IAAAA,OAAO,CAAC,IAAId,IAAJ,EAAD,CAAP;AACD;;AAED,SAAOa,IAAP;AACD;;AAED,eAAe,SAASQ,QAAT,GAAoB;AACjC,MAAMC,UAAU,GAAGC,KAAK,CAAC,EAAD,CAAL,CAChBC,IADgB,CACXC,SADW,EAEhBC,GAFgB,CAEZ,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAU,UAAGA,CAAH,EAAOC,QAAP,CAAgB,CAAhB,EAAmB,GAAnB,CAAV;AAAA,GAFY,CAAnB;AAIA,MAAMC,WAAW,YAAjB;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGR,UAAU,CAACI,GAAX,CAAe,UAAAK,SAAS;AAAA,WACvB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,SAAL,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,SAAL,QAFF,CADuB;AAAA,GAAxB,CAJH,CADF;AAaD","sourcesContent":["import styled from \"@emotion/styled\"\n\nconst List = styled.ul`\n  list-style-type: none;\n  flex: 0 0 12rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: stretch;\n  flex-direction: column;\n  font-size: 0.75em;\n\n  li {\n    flex: 1;\n  }\n\n  li:nth-child(even) {\n    opacity: 0.5;\n  }\n`\n\nfunction Clock(props) {\n  const timer = useNewTimer(new Date())\n  const interval = 1000 * 60 * 60 * 24\n  const startOfDay = Math.floor(Date.now() / interval) * interval\n  const elapsed = Math.abs(timer - startOfDay) / interval\n\n  return (\n    <li style={{ position: \"absolute\", top: `${elapsed * 100}%` }}>\n      <p>{timer.toLocaleTimeString()}.</p>\n    </li>\n  )\n}\n\nfunction useNewTimer(currentDate) {\n  const [date, setDate] = React.useState(currentDate)\n\n  React.useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000)\n    return function cleanup() {\n      clearInterval(timerID)\n    }\n  })\n\n  function tick() {\n    setDate(new Date())\n  }\n\n  return date\n}\n\nexport default function Timeline() {\n  const timestamps = Array(24)\n    .fill(undefined)\n    .map((_, i) => `${i}`.padStart(2, \"0\"))\n\n  const currentTime = Date.now\n\n  return (\n    <List>\n      <li>\n        <Clock />\n      </li>\n      {timestamps.map(timestamp => (\n        <React.Fragment>\n          <li>{timestamp}:00</li>\n          <li>{timestamp}:30</li>\n        </React.Fragment>\n      ))}\n    </List>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}