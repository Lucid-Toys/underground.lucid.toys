{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/dte/Repos/underground.lucid.toys/components/Timeline.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"@emotion/styled\";\nconst List = styled.ul`\n  list-style-type: none;\n  flex: 0 0 12rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: stretch;\n  flex-direction: column;\n  font-size: 0.75em;\n\n  li {\n    flex: 1;\n  }\n\n  li:nth-child(even) {\n    opacity: 0.5;\n  }\n`;\n\nfunction Clock(props) {\n  const timer = useNewTimer(new Date());\n  const hours = timer.getMinutes();\n  console.log(hours);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, timer.toLocaleTimeString(), \".\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Hello, world!\"));\n}\n\nfunction useNewTimer(currentDate) {\n  const [date, setDate] = React.useState(currentDate);\n  React.useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return date;\n}\n\nexport default function Timeline() {\n  const timestamps = Array(24).fill(undefined).map((_, i) => `${i}`.padStart(2, \"0\"));\n  const currentTime = _Date$now;\n  return __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Clock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), timestamps.map(timestamp => __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, timestamp, \":00\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, timestamp, \":30\"))));\n}","map":{"version":3,"sources":["/Users/dte/Repos/underground.lucid.toys/components/Timeline.js"],"names":["styled","List","ul","Clock","props","timer","useNewTimer","Date","hours","getMinutes","console","log","toLocaleTimeString","currentDate","date","setDate","React","useState","useEffect","timerID","setInterval","tick","cleanup","clearInterval","Timeline","timestamps","Array","fill","undefined","map","_","i","padStart","currentTime","timestamp"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,EAAG;;;;;;;;;;;;;;;;CAAvB;;AAkBA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,KAAK,GAAGC,WAAW,CAAC,IAAIC,IAAJ,EAAD,CAAzB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,UAAN,EAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACO,kBAAN,EAAJ,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD;;AAED,SAASN,WAAT,CAAqBO,WAArB,EAAkC;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,KAAK,CAACC,QAAN,CAAeJ,WAAf,CAAxB;AAEAG,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,QAAIC,OAAO,GAAGC,WAAW,CAAC,MAAMC,IAAI,EAAX,EAAe,IAAf,CAAzB;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACJ,OAAD,CAAb;AACD,KAFD;AAGD,GALD;;AAOA,WAASE,IAAT,GAAgB;AACdN,IAAAA,OAAO,CAAC,IAAIR,IAAJ,EAAD,CAAP;AACD;;AAED,SAAOO,IAAP;AACD;;AAED,eAAe,SAASU,QAAT,GAAoB;AACjC,QAAMC,UAAU,GAAGC,KAAK,CAAC,EAAD,CAAL,CAChBC,IADgB,CACXC,SADW,EAEhBC,GAFgB,CAEZ,CAACC,CAAD,EAAIC,CAAJ,KAAW,GAAEA,CAAE,EAAL,CAAOC,QAAP,CAAgB,CAAhB,EAAmB,GAAnB,CAFE,CAAnB;AAIA,QAAMC,WAAW,YAAjB;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGR,UAAU,CAACI,GAAX,CAAeK,SAAS,IACvB,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAL,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAL,QAFF,CADD,CAJH,CADF;AAaD","sourcesContent":["import styled from \"@emotion/styled\"\n\nconst List = styled.ul`\n  list-style-type: none;\n  flex: 0 0 12rem;\n  padding: 1rem;\n  display: flex;\n  justify-content: stretch;\n  flex-direction: column;\n  font-size: 0.75em;\n\n  li {\n    flex: 1;\n  }\n\n  li:nth-child(even) {\n    opacity: 0.5;\n  }\n`\n\nfunction Clock(props) {\n  const timer = useNewTimer(new Date())\n  const hours = timer.getMinutes()\n  console.log(hours)\n\n  return (\n    <div>\n      <p>{timer.toLocaleTimeString()}.</p>\n      <p>Hello, world!</p>\n    </div>\n  )\n}\n\nfunction useNewTimer(currentDate) {\n  const [date, setDate] = React.useState(currentDate)\n\n  React.useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000)\n    return function cleanup() {\n      clearInterval(timerID)\n    }\n  })\n\n  function tick() {\n    setDate(new Date())\n  }\n\n  return date\n}\n\nexport default function Timeline() {\n  const timestamps = Array(24)\n    .fill(undefined)\n    .map((_, i) => `${i}`.padStart(2, \"0\"))\n\n  const currentTime = Date.now\n\n  return (\n    <List>\n      <li>\n        <Clock />\n      </li>\n      {timestamps.map(timestamp => (\n        <React.Fragment>\n          <li>{timestamp}:00</li>\n          <li>{timestamp}:30</li>\n        </React.Fragment>\n      ))}\n    </List>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}